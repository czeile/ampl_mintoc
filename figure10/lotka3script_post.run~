##############################
model ../mintocPre.mod;
model lotka.mod;
model ../mintocPost.mod;
data lotka.dat;
##############################
param relObj;
param difObj;
let nlpsolver := "ipopt";

##############################
let integrator := "explicitEuler";


let mode := "Simulate";
include ../solve.run;
display objective;

##############################
let integrator := "radau3";
let mode := "Relaxed";
include ../solve.run;
#include ../plot.run;
include ../storeTrajectory.run;
#include ../saveTrajectory.run;
include ../printOutput.run;
printf "\\num\\def\\objRelaxed%i{%.9g}\n", runiter, objective >> res/tex/includeSim.tex;

let relObj := objective;
display relObj;



##############################
let mode := "CIA";
include ../solveMILP.run;

let mode := "Simulate";
include ../solve.run;
include ../printOutput.run;
printf "\\num\\def\\objCIA%i{%.9g}\n", runiter, objective>> res/tex/includeSim.tex;

let difObj:= abs(relObj-objective);
printf "\\num\\def\\difCIA%i{%.9g}\n", runiter, difObj>> res/tex/includeSim.tex;

## for Scaled Postprocessing
for {o in Omega, i in IU} { let  w_post2[o,i,"CIA"] := wi[o,i]; };
let post_objective2["CIA"]:=objective;


##############################
let mode := "ScaledCIA1";
include ../solveMILP.run;

let mode := "Simulate";
include ../solve.run;
#include ../plot.run;
include ../printOutput.run;
printf "\\num\\def\\objScaledCIAa%i{%.9g}\n", runiter, objective >> res/tex/includeSim.tex;

let difObj:= abs(relObj-objective);
printf "\\num\\def\\difScaledCIAa%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;



## for Scaled Postprocessing
for {o in Omega, i in IU} { let  w_post2[o,i,"ScaledCIA1"] := wi[o,i]; };
let post_objective2["ScaledCIA1"]:=objective;

##############################
let mode := "ScaledCIA1a";
include ../solveMILP.run;

let mode := "Simulate";
include ../solve.run;
include ../plot.run;
include ../printOutput.run;
printf "\\num\\def\\objScaledCIAc%i{%.9g}\n", runiter, objective >> res/tex/includeSim.tex;

let difObj:= abs(relObj-objective);
printf "\\num\\def\\difScaledCIAc%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;

## for Scaled Postprocessing
for {o in Omega, i in IU} { let  w_post2[o,i,"ScaledCIA1a"] := wi[o,i]; };
let post_objective2["ScaledCIA1a"]:=objective;


#################
for {o in Omega, i in IU} {
	let  w_post[o,i,"CIA"] := w_post2[o,i,"CIA"]; 
	let  w_post[o,i,"ScaledCIA1"] := w_post2[o,i,"ScaledCIA1"]; 
	let  w_post[o,i,"ScaledCIA1a"] := w_post2[o,i,"ScaledCIA1a"]; 
	}
let post_objective["CIA"]:=post_objective2["CIA"];
let post_objective["ScaledCIA1"]:=post_objective2["ScaledCIA1"];
let post_objective["ScaledCIA1a"]:=post_objective2["ScaledCIA1a"];

let mode := "GreedyForward";
include ../scaledCIAPostprocess.run;

printf "\\num\\def\\objGreedyForwardCIA%i{%.9g}\n", runiter, post_objective["CIA"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyForwardScaledCIA%i{%.9g}\n", runiter, post_objective["ScaledCIA1"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyForwardScaledCIAa%i{%.9g}\n", runiter, post_objective["ScaledCIA1a"] >> res/tex/includeSim.tex;

let difObj:= post_objective["CIA"]-post_objective2["CIA"];
printf "\\num\\def\\difGreedyForwardCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1"]-post_objective2["ScaledCIA1"];
printf "\\num\\def\\difGreedyForwardScaledCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1a"]-post_objective2["ScaledCIA1a"];
printf "\\num\\def\\difGreedyForwardScaledCIAa%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;

#################
for {o in Omega, i in IU} {
	let  w_post[o,i,"CIA"] := w_post2[o,i,"CIA"]; 
	let  w_post[o,i,"ScaledCIA1"] := w_post2[o,i,"ScaledCIA1"]; 
	let  w_post[o,i,"ScaledCIA1a"] := w_post2[o,i,"ScaledCIA1a"]; 
	}
let post_objective["CIA"]:=post_objective2["CIA"];
let post_objective["ScaledCIA1"]:=post_objective2["ScaledCIA1"];
let post_objective["ScaledCIA1a"]:=post_objective2["ScaledCIA1a"];

let mode := "GreedyForwardArc";
include ../scaledCIAPostprocess.run;

printf "\\num\\def\\objGreedyForwardArcCIA%i{%.9g}\n", runiter, post_objective["CIA"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyForwardArcScaledCIA%i{%.9g}\n", runiter, post_objective["ScaledCIA1"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyForwardArcScaledCIAa%i{%.9g}\n", runiter, post_objective["ScaledCIA1a"] >> res/tex/includeSim.tex;

let difObj:= post_objective["CIA"]-post_objective2["CIA"];
printf "\\num\\def\\difGreedyForwardArcCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1"]-post_objective2["ScaledCIA1"];
printf "\\num\\def\\difGreedyForwardArcScaledCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1a"]-post_objective2["ScaledCIA1a"];
printf "\\num\\def\\difGreedyForwardArcScaledCIAa%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;

#################
for {o in Omega, i in IU} {
	let  w_post[o,i,"CIA"] := w_post2[o,i,"CIA"]; 
	let  w_post[o,i,"ScaledCIA1"] := w_post2[o,i,"ScaledCIA1"]; 
	let  w_post[o,i,"ScaledCIA1a"] := w_post2[o,i,"ScaledCIA1a"]; 
	}
let post_objective["CIA"]:=post_objective2["CIA"];
let post_objective["ScaledCIA1"]:=post_objective2["ScaledCIA1"];
let post_objective["ScaledCIA1a"]:=post_objective2["ScaledCIA1a"];

let mode := "GreedyBackward";
include ../scaledCIAPostprocess.run;

printf "\\num\\def\\objGreedyBackwardCIA%i{%.9g}\n", runiter, post_objective["CIA"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyBackwardScaledCIA%i{%.9g}\n", runiter, post_objective["ScaledCIA1"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyBackwardScaledCIAa%i{%.9g}\n", runiter, post_objective["ScaledCIA1a"] >> res/tex/includeSim.tex;

let difObj:= post_objective["CIA"]-post_objective2["CIA"];
printf "\\num\\def\\difGreedyBackwardCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1"]-post_objective2["ScaledCIA1"];
printf "\\num\\def\\difGreedyBackwardScaledCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1a"]-post_objective2["ScaledCIA1a"];
printf "\\num\\def\\difGreedyBackwardScaledCIAa%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;


#################
for {o in Omega, i in IU} {
	let  w_post[o,i,"CIA"] := w_post2[o,i,"CIA"]; 
	let  w_post[o,i,"ScaledCIA1"] := w_post2[o,i,"ScaledCIA1"]; 
	let  w_post[o,i,"ScaledCIA1a"] := w_post2[o,i,"ScaledCIA1a"]; 
	}
let post_objective["CIA"]:=post_objective2["CIA"];
let post_objective["ScaledCIA1"]:=post_objective2["ScaledCIA1"];
let post_objective["ScaledCIA1a"]:=post_objective2["ScaledCIA1a"];

let mode := "GreedyBackwardArc";
include ../scaledCIAPostprocess.run;

printf "\\num\\def\\objGreedyBackwardArcCIA%i{%.9g}\n", runiter, post_objective["CIA"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyBackwardArcScaledCIA%i{%.9g}\n", runiter, post_objective["ScaledCIA1"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyBackwardArcScaledCIAa%i{%.9g}\n", runiter, post_objective["ScaledCIA1a"] >> res/tex/includeSim.tex;

let difObj:= post_objective["CIA"]-post_objective2["CIA"];
printf "\\num\\def\\difGreedyBackwardArcCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1"]-post_objective2["ScaledCIA1"];
printf "\\num\\def\\difGreedyBackwardArcScaledCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1a"]-post_objective2["ScaledCIA1a"];
printf "\\num\\def\\difGreedyBackwardArcScaledCIAa%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;

#################
for {o in Omega, i in IU} {
	let  w_post[o,i,"CIA"] := w_post2[o,i,"CIA"]; 
	let  w_post[o,i,"ScaledCIA1"] := w_post2[o,i,"ScaledCIA1"]; 
	let  w_post[o,i,"ScaledCIA1a"] := w_post2[o,i,"ScaledCIA1a"]; 
	}
let post_objective["CIA"]:=post_objective2["CIA"];
let post_objective["ScaledCIA1"]:=post_objective2["ScaledCIA1"];
let post_objective["ScaledCIA1a"]:=post_objective2["ScaledCIA1a"];

let mode := "GreedyLambda";
include ../scaledCIAPostprocess.run;

printf "\\num\\def\\objGreedyLambdaCIA%i{%.9g}\n", runiter, post_objective["CIA"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyLambdaScaledCIA%i{%.9g}\n", runiter, post_objective["ScaledCIA1"] >> res/tex/includeSim.tex;
printf "\\num\\def\\objGreedyLambdaScaledCIAa%i{%.9g}\n", runiter, post_objective["ScaledCIA1a"] >> res/tex/includeSim.tex;

let difObj:= post_objective["CIA"]-post_objective2["CIA"];
printf "\\num\\def\\difGreedyLambdaCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1"]-post_objective2["ScaledCIA1"];
printf "\\num\\def\\difGreedyLambdaScaledCIA%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;
let difObj:= post_objective["ScaledCIA1a"]-post_objective2["ScaledCIA1a"];
printf "\\num\\def\\difGreedyLambdaScaledCIAa%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;


#################
#for {o in Omega, i in IU} {
#	let  w_post[o,i,"CIA"] := w_post2[o,i,"CIA"]; 
#	let  w_post[o,i,"ScaledCIA1"] := w_post2[o,i,"ScaledCIA1"]; 
#	let  w_post[o,i,"ScaledCIA1a"] := w_post2[o,i,"ScaledCIA1a"]; 
#	}
#let post_objective["CIA"]:=post_objective2["CIA"];
#let post_objective["ScaledCIA1"]:=post_objective2["ScaledCIA1"];
#let post_objective["ScaledCIA1a"]:=post_objective2["ScaledCIA1a"];

#let mode := "EnumerationSingleMode";
#include ../scaledCIAPostprocess.run;

#printf "\\num\\def\\objEnumeration%i{%.9g}\n", runiter, post_objective["CIA"] >> res/tex/includeSim.tex;

#let difObj:= post_objective["CIA"]-post_objective2["CIA"];
#printf "\\num\\def\\difEnumeration%i{%.9g}\n", runiter, difObj >> res/tex/includeSim.tex;







