#
# This file is part of ampl_mintoc.
#
# Copyright 2021, Sebastian Sager, Manuel Tetschke, Clemens Zeile
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree. 
#
# ampl_mintoc is free software: you can redistribute it and/or modify
# it under the terms of the BSD-style License
#
# ampl_mintoc is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
#


param problem_name symbolic := "lotka";

##############################
model ../mintocPre.mod;
model fig10_lotka_server.mod;

### Parameters needed to run iterative SUR:
param N_param;
param POC_var;
param Inst_no;

model ../mintocPost.mod;
data fig10_lotka_server.dat;
##############################

let nlpsolver := "ipopt";
let integrator := "explicitEuler";

##############################
## prepare output file

printf "N Poc_var Inst_no param_TV_max Sim_Obj nsw \n"  >> fig10_res_CIA_TV_lotka.txt;


##############################
## read controls
include fig10_readControls_CIA_TV.run;

##############################
## Looping over all instances with respect to param_TV_max
for  {j in 2..50} {

let sigma_max := j;
option gurobi_options 'mipgap=1e-10';

##############################

let mode := "CIATV";
include ../solveMILP.run;
let mode := "Simulate";
include ../solve.run;

let filename_ext := "CIATV";
#include ../plot.run;
include ../printOutput.run;

printf "%.9g %.9g %.9g %.9g %.9g %.9g \n", N_param,  POC_var, Inst_no, sigma_max, objective, sum{i in 1..ntu-1} max{o in Omega} abs(wi[o,i] - wi[o,i-1])  >> fig10_res_CIA_TV_lotka.txt;

}



